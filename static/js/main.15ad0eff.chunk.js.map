{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","length","newTodo","Math","max","item","push","htmlFor","type","placeholder","value","onChange","target","Number","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15ad0eff.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n      data-id={id}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmitForm = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (title.length === 0) {\n      setTitleError(true);\n    }\n\n    if (userId === 0) {\n      setUserError(true);\n    }\n\n    if (userId === 0 || title.length === 0) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.max(0, ...todos.map(item => item.id + 1)),\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    todos.push(newTodo);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:  </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={event => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n          {titleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:  </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={event => {\n              setUserId(Number(event.target.value));\n              setUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled selected>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}